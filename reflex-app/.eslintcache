[{"D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\index.js":"1","D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\reportWebVitals.js":"2","D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\components\\Game.js":"3","D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\components\\numberDisplay.js":"4","D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\components\\CircleDisplay.js":"5","D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\utils.js":"6","D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\components\\menuDisplay.js":"7","D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\components\\circleDisplay.js":"8","D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\components\\game.js":"9","D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\components\\App.js":"10"},{"size":518,"mtime":1609434894934,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":6664,"mtime":1609433997607,"results":"14","hashOfConfig":"12"},{"size":645,"mtime":1609426316688,"results":"15","hashOfConfig":"12"},{"size":2635,"mtime":1609426639638,"results":"16","hashOfConfig":"12"},{"size":1577,"mtime":1609496755535,"results":"17","hashOfConfig":"12"},{"size":2903,"mtime":1609496608601,"results":"18","hashOfConfig":"12"},{"size":2623,"mtime":1609498276135,"results":"19","hashOfConfig":"12"},{"size":6768,"mtime":1609496550321,"results":"20","hashOfConfig":"12"},{"size":383,"mtime":1609434780770,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"i0qmct",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\index.js",[],["45","46"],"D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\reportWebVitals.js",[],"D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\components\\Game.js",["47","48","49","50","51","52","53"],"D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\components\\numberDisplay.js",[],"D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\components\\CircleDisplay.js",["54","55"],"\r\nimport React from \"react\";\r\nimport utils from \"../utils\"\r\n\r\n\r\n// Function to check which value of displayed numbers is the lowest\r\nfunction findMin(array) {\r\n    let thisArray = [...new Set(array)]\r\n    let min = Math.min(...thisArray);\r\n    let badIndex = thisArray.indexOf(\"\");\r\n    if (badIndex !== -1) {\r\n        thisArray.splice(badIndex, 1)\r\n        min = Math.min(...thisArray);\r\n    }\r\n    return min;\r\n}\r\n\r\n\r\nconst CircleDisplay = props => {\r\n    // This function will be used onClick during normal mode, if smallest number is clicked it diseappear, that is, number becomes \"\"\r\n    function normalMode(clickedCircle) {\r\n        if (props.numbers[clickedCircle - 1] === findMin(props.numbers)) {\r\n            return (\r\n                props.numbers[clickedCircle - 1] = \"\",\r\n                props.setNumbers([...props.numbers])\r\n\r\n            )\r\n\r\n        }\r\n    }\r\n    // Function used onClick during survival mode, afert clicking on smallest number, number is being randomly replaced and additional time is added to the clock\r\n    function survivalMode(clickedCircle) {\r\n        if (props.numbers[clickedCircle - 1] === findMin(props.numbers)) {\r\n            return (\r\n                props.setScore(props.score + 1),\r\n                props.pool.push(props.numbers[clickedCircle - 1]),\r\n                props.setSurvivalTimer(props.survivalTimer + 0.25),\r\n                props.numbers[clickedCircle - 1] = props.pool.splice(Math.floor(Math.random() * props.pool.length), 1)[0],\r\n                props.setNumbers([...props.numbers])\r\n            )\r\n\r\n        }\r\n        else\r\n            // If clicked number is different than the lowest, player loses time\r\n            props.setSurvivalTimer(props.survivalTimer - 1);\r\n    }\r\n\r\n    let gameModes = {\r\n        normal: normalMode,\r\n        survival: survivalMode\r\n    };\r\n\r\n\r\n    return (<div className=\"circles\">\r\n        {utils.range(1, props.count).map(circleId => (\r\n            <svg key={circleId} overflow=\"visible\" id={`svgCircle${circleId}`}>\r\n                <circle id={`circle${circleId}`} cx={0} cy={0} r=\"40\"\r\n                    stroke=\"black\"\r\n                    fill=\"black\"\r\n                    onClick={() => {\r\n                        let circleNumber = event.target.id[6];\r\n                        switch (props.gameMode) {\r\n                            case \"normal\": return gameModes.normal(circleNumber);\r\n                            case \"survival\": return gameModes.survival(circleNumber);\r\n                        }\r\n\r\n\r\n                    }}\r\n                />\r\n            </svg>\r\n\r\n        ))}\r\n    </div>)\r\n};\r\n\r\nexport default CircleDisplay;",["56","57"],"D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\utils.js",[],"D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\components\\menuDisplay.js",[],"D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\components\\circleDisplay.js",[],"D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\components\\game.js",[],"D:\\Programowanie\\Moje programy\\ReflexApp\\reflex-app\\src\\components\\App.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":43,"column":9,"nodeType":"64","messageId":"65","endLine":43,"endColumn":24},{"ruleId":"62","severity":1,"message":"66","line":47,"column":9,"nodeType":"64","messageId":"65","endLine":47,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":94,"column":49,"nodeType":"69","messageId":"70","endLine":94,"endColumn":50},{"ruleId":"67","severity":1,"message":"68","line":109,"column":60,"nodeType":"69","messageId":"70","endLine":109,"endColumn":61},{"ruleId":"67","severity":1,"message":"68","line":122,"column":62,"nodeType":"69","messageId":"70","endLine":122,"endColumn":63},{"ruleId":"67","severity":1,"message":"68","line":162,"column":60,"nodeType":"69","messageId":"70","endLine":162,"endColumn":61},{"ruleId":"67","severity":1,"message":"68","line":163,"column":59,"nodeType":"69","messageId":"70","endLine":163,"endColumn":60},{"ruleId":"71","severity":2,"message":"72","line":61,"column":44,"nodeType":"64","messageId":"73","endLine":61,"endColumn":49},{"ruleId":"74","severity":1,"message":"75","line":62,"column":25,"nodeType":"76","messageId":"77","endLine":65,"endColumn":26},{"ruleId":"58","replacedBy":"78"},{"ruleId":"60","replacedBy":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'normalCondition' is assigned a value but never used.","Identifier","unusedVar","'survivalCondition' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-restricted-globals","Unexpected use of 'event'.","defaultMessage","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["80"],["81"],"no-global-assign","no-unsafe-negation"]